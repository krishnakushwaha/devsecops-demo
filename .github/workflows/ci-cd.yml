name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'kubernetes/deployment.yaml'  # Ignore changes to this file to prevent loops
  pull_request:
    branches: [ main ]

jobs:
  build-test-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run Unit Tests
        run: npm test

      - name: Run Lint (Static Code Analysis)
        run: npm run lint

      - name: Build Project
        run: npm run build

      - name: Upload dist folder as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  docker-build-scan-push:
    runs-on: ubuntu-latest
    needs: build-test-lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set Docker Image Tag
        id: vars
        run: echo "TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/node-app:${{ env.TAG }} .
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/node-app:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/node-app:${{ env.TAG }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/node-app:latest

      - name: Upload image tag for next job
        run: echo "${{ secrets.DOCKER_HUB_USERNAME }}/node-app:${{ env.TAG }}" > image.txt
      - uses: actions/upload-artifact@v4
        with:
          name: image-tag
          path: image.txt

  update-k8s:
    runs-on: ubuntu-latest
    needs: docker-build-scan-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download image tag
        uses: actions/download-artifact@v4
        with:
          name: image-tag
          path: .

      - name: Set IMAGE env
        run: echo "IMAGE=$(cat image.txt)" >> $GITHUB_ENV

      - name: Update Kubernetes deployment.yaml with new image
        run: |
          sed -i "s|image: .*|image: $IMAGE|" kubernetes/deployment.yaml
          echo "Updated deployment.yaml:"
          cat kubernetes/deployment.yaml

      # Optional: Commit updated deployment.yaml back to repo
      - name: Commit and push deployment file
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add kubernetes/deployment.yaml
          git commit -m "Update deployment with new image $IMAGE" || echo "No changes to commit"
          git push
